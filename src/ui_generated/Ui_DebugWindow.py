# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/debug_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DebugWindow(object):
    def setupUi(self, DebugWindow):
        DebugWindow.setObjectName("DebugWindow")
        DebugWindow.resize(715, 886)
        DebugWindow.setMinimumSize(QtCore.QSize(600, 600))
        self.centralwidget = QtWidgets.QWidget(DebugWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setMinimumSize(QtCore.QSize(0, 2))
        self.splitter.setAutoFillBackground(False)
        self.splitter.setStyleSheet("")
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setOpaqueResize(True)
        self.splitter.setHandleWidth(5)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.widget = QtWidgets.QWidget(self.splitter)
        self.widget.setMinimumSize(QtCore.QSize(0, 150))
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_image_processed = QtWidgets.QLabel(self.widget)
        self.label_image_processed.setAlignment(QtCore.Qt.AlignCenter)
        self.label_image_processed.setObjectName("label_image_processed")
        self.verticalLayout.addWidget(self.label_image_processed)
        self.gridLayout_2.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.splitter)
        self.plainTextEdit.setMinimumSize(QtCore.QSize(0, 300))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        DebugWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(DebugWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 715, 21))
        self.menubar.setObjectName("menubar")
        DebugWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(DebugWindow)
        self.statusbar.setObjectName("statusbar")
        DebugWindow.setStatusBar(self.statusbar)

        self.retranslateUi(DebugWindow)
        QtCore.QMetaObject.connectSlotsByName(DebugWindow)

    def retranslateUi(self, DebugWindow):
        _translate = QtCore.QCoreApplication.translate
        DebugWindow.setWindowTitle(_translate("DebugWindow", "MainWindow"))
        self.label_image_processed.setText(_translate("DebugWindow", "Prev Image"))
        self.plainTextEdit.setPlainText(_translate("DebugWindow", "https://stackoverflow.com/questions/28309376/how-to-manage-qsplitter-in-qt-designer\n"
"\n"
"\n"
"You can simply create splitter containing items in Qt Designer :\n"
"\n"
"First place your widgets on your dialog or widget in designer (They should not be in a layout)\n"
"\n"
"Select the widgets that you want to be in a splitter (By holding CTL and clicking on them)\n"
"\n"
"Right click on a selected widget and from Layout menu select Lay Out Horizontally in Splitter or Lay Out Vertically in Splitter.\n"
"\n"
"Now apply a grid layout to the dialog and everything should be OK. \n"
"\n"
"---------------------------------------------\n"
"\n"
"https://stackoverflow.com/questions/1468022/how-to-specify-monospace-fonts-for-cross-platform-qt-applications\n"
"\n"
"const QFont fixedFont = QFontDatabase::systemFont(QFontDatabase::FixedFont)\n"
""))
